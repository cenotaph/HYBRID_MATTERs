= semantic_nested_form_for [:admin, @call], html: {multipart: true, :"data-abide" => ''} do |f|
  - if @call.errors.any?
    .row
      .large-6.small-12.columns#error_explanation
        %h2= "#{pluralize(@call.errors.count, "error")} prohibited this call from being saved:"
        %ul
          - @call.errors.full_messages.each do |msg|
            %li= msg
  .row
    .large-5.small-12.columns= f.input :node,  input_html: {required: ''}
  .row
    .large-5.small-12.columns= f.input :name, input_html: {required: ''}
  .row
    .large-5.small-12.columns= f.input :symposium, label: 'Is this connected to an event?', as: :select
  .row
    .large-5.small-12.columns= f.input :start_at, as: :string,  :input_html => { :class => "fdatepicker", required: ''} 
  .row
    .large-5.small-12.columns= f.input :end_at, as: :string,  :input_html => { :class => "fdatepicker", required: ''}, label: 'Deadline'
  .row
    .small-12.large-6.columns= f.input :published, as: :boolean
  .row
    .small-12.large-9.columns= f.input :overview,  as: :ckeditor, input_html: {required: ''}
      
  .row.question_fields
    .small-12.columns
      = f.fields_for :questions do |ff|
        - unless ff.object.question.blank?
          = "#{ff.object.question_type}: #{ff.object.question}"
        .row
          .small-12.columns.medium-8= ff.input :question
        .row
          .medium-8.small-12.columns= ff.input :hint
          .small-8.columns.medium-3= ff.input :question_type, as: :select, collection: ['string', 'text', 'file', 'boolean', 'group_select']
          .small-4.columns.medium-1= ff.input :required, as: :boolean
        .row
          .small-12.columns.medium-8= ff.input :char_limit, label: 'Character limit?', hint: 'Leave blank for unlimited'
        = ff.link_to_remove "Remove this question"
      = f.link_to_add 'Add a question', :questions, class: [:button, :small, :secondary]
      

  .row.photo_fields
    .small-12.large-7.columns
      = f.fields_for :photos do |ff|
        - if ff.object.image?
          = image_tag ff.object.image.url(:box)
        = ff.input :image
        = ff.link_to_remove "Remove this photo"
      = f.link_to_add "Add a photo (will appear at top of open call)", :photos  , class: [:button, :small, :secondary]  

  .row
    .small-12.columns= f.submit 'Save', class: [:button ]  

= content_for :jquery do 
  :plain  
    $('.fdatepicker').fdatetimepicker({format: 'yyyy-mm-dd'});    