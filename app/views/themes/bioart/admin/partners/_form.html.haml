= semantic_nested_form_for [:admin, @partner], html: {multipart: true, :"data-abide" => ''} do |f|
  - if @partner.errors.any?
    .row
      .large-6.small-12.columns#error_explanation
        %h2= "#{pluralize(@partner.errors.count, "error")} prohibited this admin_partner from being saved:"
        %ul
          - @partner.errors.full_messages.each do |msg|
            %li= msg
  .row
    .large-5.small-12.columns= f.input :node, input_html: {required: ''}
  .row
    .large-5.small-12.columns= f.input :name, input_html: {required: ''}
  -# .row
  -#   .large-5.small-12.columns= f.input :is_funder, as: :boolean, label: 'Is a funder?'
  .row
    .large-5.small-12.columns= f.input :is_general, as: :boolean, label: 'Is a funder?', hint: 'Ticking this box will cause this partner to appear on the Funders and Supporters page.'
  .row
    .large-5.small-12.columns= f.input :start_year, label: 'Starting year of funding', hint: 'Optional'
  .row
    .large-5.small-12.columns= f.input :end_year, label: 'Ending year of funding', hint: 'Optional'
  .row
    .large-5.small-12.columns= f.input :website
  .row
    .large-5.small-12.columns
      / - Project.all.each do |p|
      /   = f.semantic_fields_for :projects, p do |ff|
      /     = ff.input :name, as: :boolean
      = f.input :projects, collection: Project.all, as: :check_boxes, allow_multiple: true
  .row
    .large-5.small-12.columns= f.input :css_colour
  .row
    .large-5.small-12.columns
      - if f.object.logo?
        = image_tag f.object.logo.url
        = f.input :remove_logo, as: :boolean
      = f.input :logo

    / .large-5.small-12.columns
    /   - if f.object.hmlogo?
    /     = image_tag f.object.hmlogo.url(:thumb)
    /     = f.input :remove_hmlogo, as: :boolean
    /   = f.input :hmlogo    , label: 'HYBRID MATTERs logo'
  .row
    .large-12.small-12.columns= f.input :description, as: :ckeditor, input_html: {required: ''}
  .row
    .large-5.small-12.columns
      = f.input :address1
      = f.input :address2
      = f.input :city
      = f.input :country, as: :country, priority_countries: ["FI", "SE", "DK", "NO"]
      = f.input :postcode


  .row.photo_fields
    .small-12.large-7.columns
      = f.fields_for :photos do |ff|
        = if ff.object.image?
          = image_tag ff.object.image.url(:box)
        = ff.input :image
        = ff.link_to_remove "Remove this photo"
      = f.link_to_add "Add a photo", :photos
  .row
    .small-12.large-6.columns= f.submit 'Save', class: [:button, :small]
