.row
  .small-12.columns
    %h1= @call.name
    
.row
  .small-12.columns
    %h2 
      Submission by
      = @submission.name
      - unless @submission.organisation_name.blank?
        = " (#{@submission.organisation_name}"
    %h6= "submitted at #{l @submission.created_at, format: :long}"
    
.row
  .small-12.medium-6.columns
    %fieldset
      %legend Contact details
      .row
        .small-12.columns
          %strong= @submission.name
      - unless @submission.organisation_name.blank?
        .row
          .small-12.columns= @submission.organisation_name
      .row
        .small-12.columns
          = @submission.address
          %br/
          = [@submission.city, Country[@submission.country].name].join(', ')
      .row
        .small-12.columns
          Date of birth:
          = @submission.date_of_birth.strftime('%d %b %Y')
      .row
        .small-12.columns
          Nationality:
          = Country[@submission.nationality].name
      .row
        .small-12.columns
          = link_to @submission.email, "mailto:#{@submission.email}"
          - unless @submission.website.blank?
            %br/
            = link_to @submission.website, @submission.website, target: :_blank

  .small-12.medium-6.columns
    %fieldset
      %legend Files
      - @submission.answers.each do |a|
        -#- next unless a.question.question_type == 'file'

        - if a.attachment?
          = link_to a[:attachment], a.attachment.url
          %br/
        - else
          - next
        
  .small-12.columns
    %fieldset
      %legend Short bio
      = simple_format(@submission.short_biography)
      
- @submission.answers.each do |a|
  - next if a.attachment?
  .row
    .small-12.columns
      %fieldset
        = raw simple_format(a.answer_text)
      / - if a.question.question_type == 'text'
      /   %fieldset
      /     %legend= a.question.question
      /     = raw simple_format(a.answer_text)
      / - else
      /   %em= a.question.question
      /   %br/
      /   = raw simple_format(a.answer_text)
      /   = raw a.answer_boolean.to_s

.row
  .small-12.columns
    - if @vote.vote.blank?
      %h4 Your vote?
    
    - else
      %h4 
        You voted: 
        = @vote.vote
      
    .row
      = form_for [:admin, @call, @submission, @vote] do |f|
        .small-3.columns  
          %p 1 is worst, 5 is best
          = f.select :vote, [1, 2, 3, 4, 5], include_blank: true
          = f.hidden_field :user_id, value: current_user.id
          = f.submit (@vote.new_record? ? '' : "Change ") + 'Vote', class: [:tiny, :secondary, :button]

    
.row
  .small-12.columns
    %h4 Comments          
- @submission.comments.order(&:created_at).each do |comment|
  .row.comment_row{class: cycle('odd', 'even')}
    .medium-3.columns.metadata
      Comment by
      = comment.user.name
      .date
        at
        = comment.created_at.strftime("%d %b %Y %H:%M")
        = " (#{time_ago_in_words(comment.created_at)} ago)"
      - if comment.user.avatar?
        = image_tag comment.user.avatar.url(:thumb)
      - if !@submission.votes.find_by(user: comment.user).nil?
        .vote_tally= "Voted: #{@submission.votes.find_by(user: comment.user).vote}"
    .medium-7.columns.end
      = raw simple_format(comment.comment)
      
- if can? :create, @comment = @submission.comments.build
  .row
    .medium-4.columns
      = semantic_form_for [:admin, @call, @submission, @comment ] do |f|
        = f.input :comment, as: :text, label: 'Add a comment'
        = f.input :user_id, as: :hidden, input_html: {value: current_user.id }
        = f.submit 'Submit', class: [:tiny, :button, :secondary]

%hr
.row
  .small-12.columns= link_to 'Back to submissions', admin_call_submissions_path(@call), class: [:button, :small]
