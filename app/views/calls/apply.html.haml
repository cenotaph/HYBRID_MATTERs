.application
  = semantic_form_for @call, html: {multipart: true, :"data-abide" => '' } do |form|
    .row
      .medium-10.medium-offset-3.columns
        %h3= "Apply to #{@call.name}"
    - listcounter = 1
    = form.fields_for @submission do |f|
      
      .row
        .medium-2.small-offset-1.small-4.columns.left_form
          .form_label.text-left= "#{listcounter}. First name"
        .small-7.medium-4.end.columns= f.input :first_name, input_html: {required: ''}, label: false
        - listcounter += 1
      .row
        .medium-2.small-offset-1.small-4.columns.form_label.text-left.left_form= "#{listcounter}. Last name"
        .small-7.medium-4.end.columns= f.input :last_name, input_html: {required: '' }, label: false
        - listcounter += 1
      - unless @call.symposium
        .row
          .medium-2.small-offset-1.small-4.columns.text-left.left_form
            .form_label.text-left= "#{listcounter}. Group name"
            .hint.text-left Optional
          .small-7.medium-4.end.columns= f.input :organisation_name, label: false 
          - listcounter += 1
        
      .row
        .medium-2.small-offset-1.small-4.columns.form_label.text-left.left_form= "#{listcounter}. Address"
        .small-7.medium-4.end.columns= f.input :address, input_html: {required: ''}, label: false
        - listcounter += 1
        
      .row
        .medium-2.small-offset-1.small-4.columns.form_label.text-left.left_form= "#{listcounter}. City"
        .small-7.medium-4.end.columns= f.input :city, input_html: {required: ''}, label: false
        - listcounter += 1
      - unless @call.symposium  
        .row
          .medium-2.small-offset-1.small-4.columns.form_label.text-left.left_form= "#{listcounter}. Country of residence"
          .small-7.medium-4.end.columns= f.input :country, as: :country,priority_countries: [], only: ["AX", "DK", "FI", "FO",  "GL","IS", "NO", "SE" ], input_html: {required: ''}, label: false
          - listcounter += 1
    
      .row
        .medium-2.small-offset-1.small-4.columns.form_label.text-left.left_form= "#{listcounter}. Date of birth"
        .small-7.medium-4.end.columns= f.input :date_of_birth,  :input_html => { :class => "fdatepicker", required: ''}, label: false
        - listcounter += 1
      .row
        .medium-2.small-offset-1.small-4.columns.form_label.text-left.left_form= "#{listcounter}. Nationality "
        .small-7.medium-4.end.columns= f.input :nationality,  as: :country, priority_countries: ["AX", "DK", "FI", "FO",  "GL","IS", "NO", "SE" ], input_html: {required: ''}, label: false
        - listcounter += 1
        
      .row.has_topline
        .medium-2.small-offset-1.small-4.columns.text-left.left_form
          .form_label= "#{listcounter}. Short biography"
          .hint 1500 char. max
        .small-7.end.columns
          = f.input :short_biography, label: false, as: :text, :maxlength => 1500
          %p.counter= f.object.new_record? ? "1500 characters remaining" : "#{1500 - f.object.description.length} characters remaining"
          - listcounter += 1
        
      .row
        .medium-2.small-offset-1.small-4.columns.text-left.form_label.left_form= "#{listcounter}. Email address"
        .small-7.medium-4.end.columns= f.input :email, input_html: {required: ''}, label: false
        - listcounter += 1
        
      .row
        .medium-2.small-offset-1.small-4.columns.form_label.text-left.left_form= "#{listcounter}. Website"
        .small-7.medium-4.end.columns= f.input :website, label: false
        - listcounter += 1
        
      - counter = listcounter
      = f.fields_for :answers do |ff|
        .row{class:  ff.object.question.question_type.to_sym == :text ? :has_topline : false }
          .medium-2.small-offset-1.small-4.columns.text-left.left_form
            .form_label= counter.to_s + ". " + ff.object.question.question
            = ff.input :question_id, as: :hidden
            - unless ff.object.question.hint.blank?
              .hint= ff.object.question.hint
          .small-7.end.columns{class: [ ff.object.question.question_type, ff.object.question.question_type.to_sym == :text ? "medium-7" : "medium-4"] }
            - if ff.object.question.question_type.to_sym == :file
              %label.file
                = ff.input :attachment, label: false, input_html: { required: ff.object.question.required == true ? '' : false }
                %span Upload
                .selected_file
            - elsif ff.object.question.question_type.to_sym == :boolean
              = ff.input :answer_boolean, label: false,  as: :boolean
            - else
              = ff.input :answer_text, as: ff.object.question.question_type.to_sym, label: false, input_html: { required: ff.object.question.required == true ? '' : 'ssss' }
              - if  ff.object.question.question_type.to_sym == :text
                %p.counter= ff.object.new_record? ? "1500 characters remaining" : "#{1500 - f.object.description.length} characters remaining"
        - counter += 1

    .row
      .small-12.medium-4.end.columns.small-offset-3.submit_container= form.submit "Submit", class: [:button, :application ]

      
= content_for :jquery do
  :plain
    $('.fdatepicker').fdatepicker({format: 'yyyy-mm-dd'});  
    $('input[type=file]').change(function(e){
      $(this).parents('label.file').find('.selected_file').text(e.target.files[0].name);
    });
    $('textarea').keyup(function () {
      
        var left = 1500 - $(this).val().length;
        if (left < 0) {
            left = "<span style='color: red;'>" + left + "</span>";
        }
        $(this).parents('li').next('.counter').html(left + ' characters remaining');
    });
    $('form')
      .on('invalid.fndtn.abide', function () {
        $('li.file.error').next('span').css('border', '2px solid red');
        $('li.file.error').next('span').css('color', 'red');
      });